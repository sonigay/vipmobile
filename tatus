[1mdiff --git a/server/index.js b/server/index.js[m
[1mindex 6a0e82a..c9ec632 100644[m
[1m--- a/server/index.js[m
[1m+++ b/server/index.js[m
[36m@@ -18761,7 +18761,11 @@[m [mapp.get('/api/inventory/status', async (req, res) => {[m
     // 재고 데이터 처리 (모델별 집계)[m
     const inventoryMap = new Map(); // key: "모델명", value: { 재고수량, 담당자, 사무실, 소속, 구분 }[m
     [m
[31m-    inventoryValues.slice(3).forEach(row => {[m
[32m+[m[32m    console.log(`📊 [재고배정 디버깅] 재고 데이터 행 수: ${inventoryValues.length}`);[m
[32m+[m[32m    let processedRows = 0;[m
[32m+[m[32m    let validModels = 0;[m
[32m+[m[41m    [m
[32m+[m[32m    inventoryValues.slice(3).forEach((row, index) => {[m
       if (row.length >= 23) {[m
         const modelName = (row[13] || '').toString().trim(); // N열: 모델명[m
         const color = (row[14] || '').toString().trim(); // O열: 색상[m
[36m@@ -18771,7 +18775,13 @@[m [mapp.get('/api/inventory/status', async (req, res) => {[m
         const agent = (row[8] || '').toString().trim(); // I열: 담당자[m
         const store = (row[21] || '').toString().trim(); // V열: 출고처[m
         [m
[32m+[m[32m        // 디버깅: 처음 5개 행의 모델명 확인[m
[32m+[m[32m        if (index < 5) {[m
[32m+[m[32m          console.log(`재고 행 ${index}: 모델명="${modelName}", 색상="${color}", 구분="${category}", 길이=${row.length}`);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
         if (modelName && category !== '#N/A') {[m
[32m+[m[32m          validModels++;[m
           // 필터링 적용[m
           if (req.query.agent && req.query.agent !== agent) return;[m
           if (req.query.office && req.query.office !== office) return;[m
